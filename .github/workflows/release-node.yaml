name: release-node

on:
  push:
    branches:
    - release-node

jobs:
  publish-node:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # to detect version change in detect_version

    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@stable

    - name: Detect app version
      uses: salsify/action-detect-and-tag-new-version@v2
      id: detect_version
      with:
        create-tag: false
        version-command: cd cotoami_node && cargo read-manifest | jq -r .version

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
  
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Enable BuildKit CacheMount
    # https://github.com/reproducible-containers/buildkit-cache-dance

    - name: Cache
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          usr-local-cargo-registry
          app-target
        key: cache-${{ hashFiles('Dockerfile') }}

    - name: Inject cache into docker
      uses: reproducible-containers/buildkit-cache-dance@v3.1.0
      with:
        cache-map: |
          {
            "usr-local-cargo-registry": "/usr/local/cargo/registry",
            "app-target": "/app/target"
          }
        skip-extraction: ${{ steps.cache.outputs.cache-hit }}

    # Build an image and publish it to Dockerhub
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        file: Dockerfile
        context: .
        tags: cotoami/cotoami-node:${{ steps.detect_version.outputs.current-version }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
